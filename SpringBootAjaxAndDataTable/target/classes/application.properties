spring.mvc.view.prefix = /WEB-INF/views/
spring.mvc.view.suffix = .jsp
spring.mvc.static-path-pattern=/resources/**




server.port = 8281


# ===============================
# = DATA SOURCE# 
# ===============================
   # DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.


 ===============================
# = MYSQL | DATA SOURCE 
# ===============================

spring.datasource.url=jdbc:mysql://127.0.0.1:3306/springbootdb?useSSL=false&createDatabaseIfNotExist=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username= root
spring.datasource.password= root


# ===============================
# = JPA  | HIBERNATE
# ===============================
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
# Showing sql Query 
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect



# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
#spring.queries.users-query=select email, password, active from user where email=?
#spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.id=ur.user_id) inner join role r on(ur.id=r.id) where u.email=?



